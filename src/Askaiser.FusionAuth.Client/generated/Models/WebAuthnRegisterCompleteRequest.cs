// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Askaiser.FusionAuth.Client.Models {
    /// <summary>
    /// Request to complete the WebAuthn registration ceremony for a new credential,.
    /// </summary>
    public class WebAuthnRegisterCompleteRequest : IParsable {
        /// <summary>Request to register a new public key with WebAuthn</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WebAuthnPublicKeyRegistrationRequest? Credential { get; set; }
#nullable restore
#else
        public WebAuthnPublicKeyRegistrationRequest Credential { get; set; }
#endif
        /// <summary>The origin property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Origin { get; set; }
#nullable restore
#else
        public string Origin { get; set; }
#endif
        /// <summary>The rpId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RpId { get; set; }
#nullable restore
#else
        public string RpId { get; set; }
#endif
        /// <summary>The userId property</summary>
        public Guid? UserId { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static WebAuthnRegisterCompleteRequest CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new WebAuthnRegisterCompleteRequest();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"credential", n => { Credential = n.GetObjectValue<WebAuthnPublicKeyRegistrationRequest>(WebAuthnPublicKeyRegistrationRequest.CreateFromDiscriminatorValue); } },
                {"origin", n => { Origin = n.GetStringValue(); } },
                {"rpId", n => { RpId = n.GetStringValue(); } },
                {"userId", n => { UserId = n.GetGuidValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<WebAuthnPublicKeyRegistrationRequest>("credential", Credential);
            writer.WriteStringValue("origin", Origin);
            writer.WriteStringValue("rpId", RpId);
            writer.WriteGuidValue("userId", UserId);
        }
    }
}
