// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Askaiser.FusionAuth.Client.Models {
    public class LambdaConfiguration : IParsable {
        /// <summary>The accessTokenPopulateId property</summary>
        public Guid? AccessTokenPopulateId { get; set; }
        /// <summary>The idTokenPopulateId property</summary>
        public Guid? IdTokenPopulateId { get; set; }
        /// <summary>The samlv2PopulateId property</summary>
        public Guid? Samlv2PopulateId { get; set; }
        /// <summary>The selfServiceRegistrationValidationId property</summary>
        public Guid? SelfServiceRegistrationValidationId { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static LambdaConfiguration CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new LambdaConfiguration();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"accessTokenPopulateId", n => { AccessTokenPopulateId = n.GetGuidValue(); } },
                {"idTokenPopulateId", n => { IdTokenPopulateId = n.GetGuidValue(); } },
                {"samlv2PopulateId", n => { Samlv2PopulateId = n.GetGuidValue(); } },
                {"selfServiceRegistrationValidationId", n => { SelfServiceRegistrationValidationId = n.GetGuidValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteGuidValue("accessTokenPopulateId", AccessTokenPopulateId);
            writer.WriteGuidValue("idTokenPopulateId", IdTokenPopulateId);
            writer.WriteGuidValue("samlv2PopulateId", Samlv2PopulateId);
            writer.WriteGuidValue("selfServiceRegistrationValidationId", SelfServiceRegistrationValidationId);
        }
    }
}
