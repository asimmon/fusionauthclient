// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Askaiser.FusionAuth.Client.Models {
    /// <summary>
    /// Used by the Relying Party to specify their requirements for authenticator attributes. Fields use the deprecated &quot;resident key&quot; terminology to refer  to client-side discoverable credentials to maintain backwards compatibility with WebAuthn Level 1.
    /// </summary>
    public class AuthenticatorSelectionCriteria : IParsable {
        /// <summary>Describes the &lt;a href=&quot;https:www.w3.orgTRwebauthn-2#authenticator-attachment-modality&quot;&gt;authenticator attachment modality&lt;a&gt;.</summary>
        public Askaiser.FusionAuth.Client.Models.AuthenticatorAttachment? AuthenticatorAttachment { get; set; }
        /// <summary>The requireResidentKey property</summary>
        public bool? RequireResidentKey { get; set; }
        /// <summary>Describes the Relying Party&apos;s requirements for &lt;a href=&quot;https:www.w3.orgTRwebauthn-2#client-side-discoverable-credential&quot;&gt;client-side  discoverable credentials&lt;a&gt; (formerly known as &quot;resident keys&quot;)</summary>
        public ResidentKeyRequirement? ResidentKey { get; set; }
        /// <summary>Used to express whether the Relying Party requires &lt;a href=&quot;https:www.w3.orgTRwebauthn-2#user-verification&quot;&gt;user verification&lt;a&gt; for the  current operation.</summary>
        public UserVerificationRequirement? UserVerification { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static AuthenticatorSelectionCriteria CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new AuthenticatorSelectionCriteria();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"authenticatorAttachment", n => { AuthenticatorAttachment = n.GetEnumValue<AuthenticatorAttachment>(); } },
                {"requireResidentKey", n => { RequireResidentKey = n.GetBoolValue(); } },
                {"residentKey", n => { ResidentKey = n.GetEnumValue<ResidentKeyRequirement>(); } },
                {"userVerification", n => { UserVerification = n.GetEnumValue<UserVerificationRequirement>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<AuthenticatorAttachment>("authenticatorAttachment", AuthenticatorAttachment);
            writer.WriteBoolValue("requireResidentKey", RequireResidentKey);
            writer.WriteEnumValue<ResidentKeyRequirement>("residentKey", ResidentKey);
            writer.WriteEnumValue<UserVerificationRequirement>("userVerification", UserVerification);
        }
    }
}
