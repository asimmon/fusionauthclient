// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Askaiser.FusionAuth.Client.Models {
    /// <summary>
    /// Stores an email template used to send emails to users.
    /// </summary>
    public class EmailTemplate : IParsable {
        /// <summary>The defaultFromName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DefaultFromName { get; set; }
#nullable restore
#else
        public string DefaultFromName { get; set; }
#endif
        /// <summary>The defaultHtmlTemplate property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DefaultHtmlTemplate { get; set; }
#nullable restore
#else
        public string DefaultHtmlTemplate { get; set; }
#endif
        /// <summary>The defaultSubject property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DefaultSubject { get; set; }
#nullable restore
#else
        public string DefaultSubject { get; set; }
#endif
        /// <summary>The defaultTextTemplate property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DefaultTextTemplate { get; set; }
#nullable restore
#else
        public string DefaultTextTemplate { get; set; }
#endif
        /// <summary>The fromEmail property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FromEmail { get; set; }
#nullable restore
#else
        public string FromEmail { get; set; }
#endif
        /// <summary>The id property</summary>
        public Guid? Id { get; set; }
        /// <summary>The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC.</summary>
        public long? InsertInstant { get; set; }
        /// <summary>The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC.</summary>
        public long? LastUpdateInstant { get; set; }
        /// <summary>Models a set of localized Strings that can be stored as JSON.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public LocalizedStrings? LocalizedFromNames { get; set; }
#nullable restore
#else
        public LocalizedStrings LocalizedFromNames { get; set; }
#endif
        /// <summary>Models a set of localized Strings that can be stored as JSON.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public LocalizedStrings? LocalizedHtmlTemplates { get; set; }
#nullable restore
#else
        public LocalizedStrings LocalizedHtmlTemplates { get; set; }
#endif
        /// <summary>Models a set of localized Strings that can be stored as JSON.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public LocalizedStrings? LocalizedSubjects { get; set; }
#nullable restore
#else
        public LocalizedStrings LocalizedSubjects { get; set; }
#endif
        /// <summary>Models a set of localized Strings that can be stored as JSON.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public LocalizedStrings? LocalizedTextTemplates { get; set; }
#nullable restore
#else
        public LocalizedStrings LocalizedTextTemplates { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static EmailTemplate CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new EmailTemplate();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"defaultFromName", n => { DefaultFromName = n.GetStringValue(); } },
                {"defaultHtmlTemplate", n => { DefaultHtmlTemplate = n.GetStringValue(); } },
                {"defaultSubject", n => { DefaultSubject = n.GetStringValue(); } },
                {"defaultTextTemplate", n => { DefaultTextTemplate = n.GetStringValue(); } },
                {"fromEmail", n => { FromEmail = n.GetStringValue(); } },
                {"id", n => { Id = n.GetGuidValue(); } },
                {"insertInstant", n => { InsertInstant = n.GetLongValue(); } },
                {"lastUpdateInstant", n => { LastUpdateInstant = n.GetLongValue(); } },
                {"localizedFromNames", n => { LocalizedFromNames = n.GetObjectValue<LocalizedStrings>(LocalizedStrings.CreateFromDiscriminatorValue); } },
                {"localizedHtmlTemplates", n => { LocalizedHtmlTemplates = n.GetObjectValue<LocalizedStrings>(LocalizedStrings.CreateFromDiscriminatorValue); } },
                {"localizedSubjects", n => { LocalizedSubjects = n.GetObjectValue<LocalizedStrings>(LocalizedStrings.CreateFromDiscriminatorValue); } },
                {"localizedTextTemplates", n => { LocalizedTextTemplates = n.GetObjectValue<LocalizedStrings>(LocalizedStrings.CreateFromDiscriminatorValue); } },
                {"name", n => { Name = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("defaultFromName", DefaultFromName);
            writer.WriteStringValue("defaultHtmlTemplate", DefaultHtmlTemplate);
            writer.WriteStringValue("defaultSubject", DefaultSubject);
            writer.WriteStringValue("defaultTextTemplate", DefaultTextTemplate);
            writer.WriteStringValue("fromEmail", FromEmail);
            writer.WriteGuidValue("id", Id);
            writer.WriteLongValue("insertInstant", InsertInstant);
            writer.WriteLongValue("lastUpdateInstant", LastUpdateInstant);
            writer.WriteObjectValue<LocalizedStrings>("localizedFromNames", LocalizedFromNames);
            writer.WriteObjectValue<LocalizedStrings>("localizedHtmlTemplates", LocalizedHtmlTemplates);
            writer.WriteObjectValue<LocalizedStrings>("localizedSubjects", LocalizedSubjects);
            writer.WriteObjectValue<LocalizedStrings>("localizedTextTemplates", LocalizedTextTemplates);
            writer.WriteStringValue("name", Name);
        }
    }
}
