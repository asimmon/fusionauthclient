// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Askaiser.FusionAuth.Client.Models {
    public class ApplicationEmailConfiguration : IParsable {
        /// <summary>The emailUpdateEmailTemplateId property</summary>
        public Guid? EmailUpdateEmailTemplateId { get; set; }
        /// <summary>The emailVerificationEmailTemplateId property</summary>
        public Guid? EmailVerificationEmailTemplateId { get; set; }
        /// <summary>The emailVerifiedEmailTemplateId property</summary>
        public Guid? EmailVerifiedEmailTemplateId { get; set; }
        /// <summary>The forgotPasswordEmailTemplateId property</summary>
        public Guid? ForgotPasswordEmailTemplateId { get; set; }
        /// <summary>The loginIdInUseOnCreateEmailTemplateId property</summary>
        public Guid? LoginIdInUseOnCreateEmailTemplateId { get; set; }
        /// <summary>The loginIdInUseOnUpdateEmailTemplateId property</summary>
        public Guid? LoginIdInUseOnUpdateEmailTemplateId { get; set; }
        /// <summary>The loginNewDeviceEmailTemplateId property</summary>
        public Guid? LoginNewDeviceEmailTemplateId { get; set; }
        /// <summary>The loginSuspiciousEmailTemplateId property</summary>
        public Guid? LoginSuspiciousEmailTemplateId { get; set; }
        /// <summary>The passwordlessEmailTemplateId property</summary>
        public Guid? PasswordlessEmailTemplateId { get; set; }
        /// <summary>The passwordResetSuccessEmailTemplateId property</summary>
        public Guid? PasswordResetSuccessEmailTemplateId { get; set; }
        /// <summary>The passwordUpdateEmailTemplateId property</summary>
        public Guid? PasswordUpdateEmailTemplateId { get; set; }
        /// <summary>The setPasswordEmailTemplateId property</summary>
        public Guid? SetPasswordEmailTemplateId { get; set; }
        /// <summary>The twoFactorMethodAddEmailTemplateId property</summary>
        public Guid? TwoFactorMethodAddEmailTemplateId { get; set; }
        /// <summary>The twoFactorMethodRemoveEmailTemplateId property</summary>
        public Guid? TwoFactorMethodRemoveEmailTemplateId { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static ApplicationEmailConfiguration CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new ApplicationEmailConfiguration();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"emailUpdateEmailTemplateId", n => { EmailUpdateEmailTemplateId = n.GetGuidValue(); } },
                {"emailVerificationEmailTemplateId", n => { EmailVerificationEmailTemplateId = n.GetGuidValue(); } },
                {"emailVerifiedEmailTemplateId", n => { EmailVerifiedEmailTemplateId = n.GetGuidValue(); } },
                {"forgotPasswordEmailTemplateId", n => { ForgotPasswordEmailTemplateId = n.GetGuidValue(); } },
                {"loginIdInUseOnCreateEmailTemplateId", n => { LoginIdInUseOnCreateEmailTemplateId = n.GetGuidValue(); } },
                {"loginIdInUseOnUpdateEmailTemplateId", n => { LoginIdInUseOnUpdateEmailTemplateId = n.GetGuidValue(); } },
                {"loginNewDeviceEmailTemplateId", n => { LoginNewDeviceEmailTemplateId = n.GetGuidValue(); } },
                {"loginSuspiciousEmailTemplateId", n => { LoginSuspiciousEmailTemplateId = n.GetGuidValue(); } },
                {"passwordResetSuccessEmailTemplateId", n => { PasswordResetSuccessEmailTemplateId = n.GetGuidValue(); } },
                {"passwordUpdateEmailTemplateId", n => { PasswordUpdateEmailTemplateId = n.GetGuidValue(); } },
                {"passwordlessEmailTemplateId", n => { PasswordlessEmailTemplateId = n.GetGuidValue(); } },
                {"setPasswordEmailTemplateId", n => { SetPasswordEmailTemplateId = n.GetGuidValue(); } },
                {"twoFactorMethodAddEmailTemplateId", n => { TwoFactorMethodAddEmailTemplateId = n.GetGuidValue(); } },
                {"twoFactorMethodRemoveEmailTemplateId", n => { TwoFactorMethodRemoveEmailTemplateId = n.GetGuidValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteGuidValue("emailUpdateEmailTemplateId", EmailUpdateEmailTemplateId);
            writer.WriteGuidValue("emailVerificationEmailTemplateId", EmailVerificationEmailTemplateId);
            writer.WriteGuidValue("emailVerifiedEmailTemplateId", EmailVerifiedEmailTemplateId);
            writer.WriteGuidValue("forgotPasswordEmailTemplateId", ForgotPasswordEmailTemplateId);
            writer.WriteGuidValue("loginIdInUseOnCreateEmailTemplateId", LoginIdInUseOnCreateEmailTemplateId);
            writer.WriteGuidValue("loginIdInUseOnUpdateEmailTemplateId", LoginIdInUseOnUpdateEmailTemplateId);
            writer.WriteGuidValue("loginNewDeviceEmailTemplateId", LoginNewDeviceEmailTemplateId);
            writer.WriteGuidValue("loginSuspiciousEmailTemplateId", LoginSuspiciousEmailTemplateId);
            writer.WriteGuidValue("passwordlessEmailTemplateId", PasswordlessEmailTemplateId);
            writer.WriteGuidValue("passwordResetSuccessEmailTemplateId", PasswordResetSuccessEmailTemplateId);
            writer.WriteGuidValue("passwordUpdateEmailTemplateId", PasswordUpdateEmailTemplateId);
            writer.WriteGuidValue("setPasswordEmailTemplateId", SetPasswordEmailTemplateId);
            writer.WriteGuidValue("twoFactorMethodAddEmailTemplateId", TwoFactorMethodAddEmailTemplateId);
            writer.WriteGuidValue("twoFactorMethodRemoveEmailTemplateId", TwoFactorMethodRemoveEmailTemplateId);
        }
    }
}
