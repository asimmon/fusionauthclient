// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Askaiser.FusionAuth.Client.Models {
    public class TenantLambdaConfiguration : IParsable {
        /// <summary>The scimEnterpriseUserRequestConverterId property</summary>
        public Guid? ScimEnterpriseUserRequestConverterId { get; set; }
        /// <summary>The scimEnterpriseUserResponseConverterId property</summary>
        public Guid? ScimEnterpriseUserResponseConverterId { get; set; }
        /// <summary>The scimGroupRequestConverterId property</summary>
        public Guid? ScimGroupRequestConverterId { get; set; }
        /// <summary>The scimGroupResponseConverterId property</summary>
        public Guid? ScimGroupResponseConverterId { get; set; }
        /// <summary>The scimUserRequestConverterId property</summary>
        public Guid? ScimUserRequestConverterId { get; set; }
        /// <summary>The scimUserResponseConverterId property</summary>
        public Guid? ScimUserResponseConverterId { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static TenantLambdaConfiguration CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new TenantLambdaConfiguration();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"scimEnterpriseUserRequestConverterId", n => { ScimEnterpriseUserRequestConverterId = n.GetGuidValue(); } },
                {"scimEnterpriseUserResponseConverterId", n => { ScimEnterpriseUserResponseConverterId = n.GetGuidValue(); } },
                {"scimGroupRequestConverterId", n => { ScimGroupRequestConverterId = n.GetGuidValue(); } },
                {"scimGroupResponseConverterId", n => { ScimGroupResponseConverterId = n.GetGuidValue(); } },
                {"scimUserRequestConverterId", n => { ScimUserRequestConverterId = n.GetGuidValue(); } },
                {"scimUserResponseConverterId", n => { ScimUserResponseConverterId = n.GetGuidValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteGuidValue("scimEnterpriseUserRequestConverterId", ScimEnterpriseUserRequestConverterId);
            writer.WriteGuidValue("scimEnterpriseUserResponseConverterId", ScimEnterpriseUserResponseConverterId);
            writer.WriteGuidValue("scimGroupRequestConverterId", ScimGroupRequestConverterId);
            writer.WriteGuidValue("scimGroupResponseConverterId", ScimGroupResponseConverterId);
            writer.WriteGuidValue("scimUserRequestConverterId", ScimUserRequestConverterId);
            writer.WriteGuidValue("scimUserResponseConverterId", ScimUserResponseConverterId);
        }
    }
}
