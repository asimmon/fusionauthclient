// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Askaiser.FusionAuth.Client.Models {
    public class Application : IParsable {
        /// <summary>The accessControlConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ApplicationAccessControlConfiguration? AccessControlConfiguration { get; set; }
#nullable restore
#else
        public ApplicationAccessControlConfiguration AccessControlConfiguration { get; set; }
#endif
        /// <summary>The active property</summary>
        public bool? Active { get; set; }
        /// <summary>The authenticationTokenConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.AuthenticationTokenConfiguration? AuthenticationTokenConfiguration { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.AuthenticationTokenConfiguration AuthenticationTokenConfiguration { get; set; }
#endif
        /// <summary>CleanSpeak configuration at the system and application level.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.CleanSpeakConfiguration? CleanSpeakConfiguration { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.CleanSpeakConfiguration CleanSpeakConfiguration { get; set; }
#endif
        /// <summary>The data property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Application_data? Data { get; set; }
#nullable restore
#else
        public Application_data Data { get; set; }
#endif
        /// <summary>The emailConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ApplicationEmailConfiguration? EmailConfiguration { get; set; }
#nullable restore
#else
        public ApplicationEmailConfiguration EmailConfiguration { get; set; }
#endif
        /// <summary>The externalIdentifierConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ApplicationExternalIdentifierConfiguration? ExternalIdentifierConfiguration { get; set; }
#nullable restore
#else
        public ApplicationExternalIdentifierConfiguration ExternalIdentifierConfiguration { get; set; }
#endif
        /// <summary>The formConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ApplicationFormConfiguration? FormConfiguration { get; set; }
#nullable restore
#else
        public ApplicationFormConfiguration FormConfiguration { get; set; }
#endif
        /// <summary>The id property</summary>
        public Guid? Id { get; set; }
        /// <summary>The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC.</summary>
        public long? InsertInstant { get; set; }
        /// <summary>JWT Configuration. A JWT Configuration for an Application may not be active if it is using the global configuration, the configuration  may be &lt;code&gt;enabled = false&lt;code&gt;.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.JWTConfiguration? JwtConfiguration { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.JWTConfiguration JwtConfiguration { get; set; }
#endif
        /// <summary>The lambdaConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.LambdaConfiguration? LambdaConfiguration { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.LambdaConfiguration LambdaConfiguration { get; set; }
#endif
        /// <summary>The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC.</summary>
        public long? LastUpdateInstant { get; set; }
        /// <summary>The loginConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.LoginConfiguration? LoginConfiguration { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.LoginConfiguration LoginConfiguration { get; set; }
#endif
        /// <summary>The multiFactorConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ApplicationMultiFactorConfiguration? MultiFactorConfiguration { get; set; }
#nullable restore
#else
        public ApplicationMultiFactorConfiguration MultiFactorConfiguration { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The oauthConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public OAuth2Configuration? OauthConfiguration { get; set; }
#nullable restore
#else
        public OAuth2Configuration OauthConfiguration { get; set; }
#endif
        /// <summary>The passwordlessConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.PasswordlessConfiguration? PasswordlessConfiguration { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.PasswordlessConfiguration PasswordlessConfiguration { get; set; }
#endif
        /// <summary>The registrationConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.RegistrationConfiguration? RegistrationConfiguration { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.RegistrationConfiguration RegistrationConfiguration { get; set; }
#endif
        /// <summary>A Application-level policy for deleting Users.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ApplicationRegistrationDeletePolicy? RegistrationDeletePolicy { get; set; }
#nullable restore
#else
        public ApplicationRegistrationDeletePolicy RegistrationDeletePolicy { get; set; }
#endif
        /// <summary>The roles property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<ApplicationRole>? Roles { get; set; }
#nullable restore
#else
        public List<ApplicationRole> Roles { get; set; }
#endif
        /// <summary>The samlv2Configuration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.SAMLv2Configuration? Samlv2Configuration { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.SAMLv2Configuration Samlv2Configuration { get; set; }
#endif
        /// <summary>The state property</summary>
        public ObjectState? State { get; set; }
        /// <summary>The tenantId property</summary>
        public Guid? TenantId { get; set; }
        /// <summary>The themeId property</summary>
        public Guid? ThemeId { get; set; }
        /// <summary>The unverified property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RegistrationUnverifiedOptions? Unverified { get; set; }
#nullable restore
#else
        public RegistrationUnverifiedOptions Unverified { get; set; }
#endif
        /// <summary>The verificationEmailTemplateId property</summary>
        public Guid? VerificationEmailTemplateId { get; set; }
        /// <summary>The verificationStrategy property</summary>
        public Askaiser.FusionAuth.Client.Models.VerificationStrategy? VerificationStrategy { get; set; }
        /// <summary>The verifyRegistration property</summary>
        public bool? VerifyRegistration { get; set; }
        /// <summary>Application-level configuration for WebAuthn</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ApplicationWebAuthnConfiguration? WebAuthnConfiguration { get; set; }
#nullable restore
#else
        public ApplicationWebAuthnConfiguration WebAuthnConfiguration { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Application CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Application();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"accessControlConfiguration", n => { AccessControlConfiguration = n.GetObjectValue<ApplicationAccessControlConfiguration>(ApplicationAccessControlConfiguration.CreateFromDiscriminatorValue); } },
                {"active", n => { Active = n.GetBoolValue(); } },
                {"authenticationTokenConfiguration", n => { AuthenticationTokenConfiguration = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.AuthenticationTokenConfiguration>(Askaiser.FusionAuth.Client.Models.AuthenticationTokenConfiguration.CreateFromDiscriminatorValue); } },
                {"cleanSpeakConfiguration", n => { CleanSpeakConfiguration = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.CleanSpeakConfiguration>(Askaiser.FusionAuth.Client.Models.CleanSpeakConfiguration.CreateFromDiscriminatorValue); } },
                {"data", n => { Data = n.GetObjectValue<Application_data>(Application_data.CreateFromDiscriminatorValue); } },
                {"emailConfiguration", n => { EmailConfiguration = n.GetObjectValue<ApplicationEmailConfiguration>(ApplicationEmailConfiguration.CreateFromDiscriminatorValue); } },
                {"externalIdentifierConfiguration", n => { ExternalIdentifierConfiguration = n.GetObjectValue<ApplicationExternalIdentifierConfiguration>(ApplicationExternalIdentifierConfiguration.CreateFromDiscriminatorValue); } },
                {"formConfiguration", n => { FormConfiguration = n.GetObjectValue<ApplicationFormConfiguration>(ApplicationFormConfiguration.CreateFromDiscriminatorValue); } },
                {"id", n => { Id = n.GetGuidValue(); } },
                {"insertInstant", n => { InsertInstant = n.GetLongValue(); } },
                {"jwtConfiguration", n => { JwtConfiguration = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.JWTConfiguration>(Askaiser.FusionAuth.Client.Models.JWTConfiguration.CreateFromDiscriminatorValue); } },
                {"lambdaConfiguration", n => { LambdaConfiguration = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.LambdaConfiguration>(Askaiser.FusionAuth.Client.Models.LambdaConfiguration.CreateFromDiscriminatorValue); } },
                {"lastUpdateInstant", n => { LastUpdateInstant = n.GetLongValue(); } },
                {"loginConfiguration", n => { LoginConfiguration = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.LoginConfiguration>(Askaiser.FusionAuth.Client.Models.LoginConfiguration.CreateFromDiscriminatorValue); } },
                {"multiFactorConfiguration", n => { MultiFactorConfiguration = n.GetObjectValue<ApplicationMultiFactorConfiguration>(ApplicationMultiFactorConfiguration.CreateFromDiscriminatorValue); } },
                {"name", n => { Name = n.GetStringValue(); } },
                {"oauthConfiguration", n => { OauthConfiguration = n.GetObjectValue<OAuth2Configuration>(OAuth2Configuration.CreateFromDiscriminatorValue); } },
                {"passwordlessConfiguration", n => { PasswordlessConfiguration = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.PasswordlessConfiguration>(Askaiser.FusionAuth.Client.Models.PasswordlessConfiguration.CreateFromDiscriminatorValue); } },
                {"registrationConfiguration", n => { RegistrationConfiguration = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.RegistrationConfiguration>(Askaiser.FusionAuth.Client.Models.RegistrationConfiguration.CreateFromDiscriminatorValue); } },
                {"registrationDeletePolicy", n => { RegistrationDeletePolicy = n.GetObjectValue<ApplicationRegistrationDeletePolicy>(ApplicationRegistrationDeletePolicy.CreateFromDiscriminatorValue); } },
                {"roles", n => { Roles = n.GetCollectionOfObjectValues<ApplicationRole>(ApplicationRole.CreateFromDiscriminatorValue)?.ToList(); } },
                {"samlv2Configuration", n => { Samlv2Configuration = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.SAMLv2Configuration>(Askaiser.FusionAuth.Client.Models.SAMLv2Configuration.CreateFromDiscriminatorValue); } },
                {"state", n => { State = n.GetEnumValue<ObjectState>(); } },
                {"tenantId", n => { TenantId = n.GetGuidValue(); } },
                {"themeId", n => { ThemeId = n.GetGuidValue(); } },
                {"unverified", n => { Unverified = n.GetObjectValue<RegistrationUnverifiedOptions>(RegistrationUnverifiedOptions.CreateFromDiscriminatorValue); } },
                {"verificationEmailTemplateId", n => { VerificationEmailTemplateId = n.GetGuidValue(); } },
                {"verificationStrategy", n => { VerificationStrategy = n.GetEnumValue<VerificationStrategy>(); } },
                {"verifyRegistration", n => { VerifyRegistration = n.GetBoolValue(); } },
                {"webAuthnConfiguration", n => { WebAuthnConfiguration = n.GetObjectValue<ApplicationWebAuthnConfiguration>(ApplicationWebAuthnConfiguration.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<ApplicationAccessControlConfiguration>("accessControlConfiguration", AccessControlConfiguration);
            writer.WriteBoolValue("active", Active);
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.AuthenticationTokenConfiguration>("authenticationTokenConfiguration", AuthenticationTokenConfiguration);
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.CleanSpeakConfiguration>("cleanSpeakConfiguration", CleanSpeakConfiguration);
            writer.WriteObjectValue<Application_data>("data", Data);
            writer.WriteObjectValue<ApplicationEmailConfiguration>("emailConfiguration", EmailConfiguration);
            writer.WriteObjectValue<ApplicationExternalIdentifierConfiguration>("externalIdentifierConfiguration", ExternalIdentifierConfiguration);
            writer.WriteObjectValue<ApplicationFormConfiguration>("formConfiguration", FormConfiguration);
            writer.WriteGuidValue("id", Id);
            writer.WriteLongValue("insertInstant", InsertInstant);
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.JWTConfiguration>("jwtConfiguration", JwtConfiguration);
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.LambdaConfiguration>("lambdaConfiguration", LambdaConfiguration);
            writer.WriteLongValue("lastUpdateInstant", LastUpdateInstant);
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.LoginConfiguration>("loginConfiguration", LoginConfiguration);
            writer.WriteObjectValue<ApplicationMultiFactorConfiguration>("multiFactorConfiguration", MultiFactorConfiguration);
            writer.WriteStringValue("name", Name);
            writer.WriteObjectValue<OAuth2Configuration>("oauthConfiguration", OauthConfiguration);
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.PasswordlessConfiguration>("passwordlessConfiguration", PasswordlessConfiguration);
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.RegistrationConfiguration>("registrationConfiguration", RegistrationConfiguration);
            writer.WriteObjectValue<ApplicationRegistrationDeletePolicy>("registrationDeletePolicy", RegistrationDeletePolicy);
            writer.WriteCollectionOfObjectValues<ApplicationRole>("roles", Roles);
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.SAMLv2Configuration>("samlv2Configuration", Samlv2Configuration);
            writer.WriteEnumValue<ObjectState>("state", State);
            writer.WriteGuidValue("tenantId", TenantId);
            writer.WriteGuidValue("themeId", ThemeId);
            writer.WriteObjectValue<RegistrationUnverifiedOptions>("unverified", Unverified);
            writer.WriteGuidValue("verificationEmailTemplateId", VerificationEmailTemplateId);
            writer.WriteEnumValue<VerificationStrategy>("verificationStrategy", VerificationStrategy);
            writer.WriteBoolValue("verifyRegistration", VerifyRegistration);
            writer.WriteObjectValue<ApplicationWebAuthnConfiguration>("webAuthnConfiguration", WebAuthnConfiguration);
        }
    }
}
