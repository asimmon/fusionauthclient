// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Askaiser.FusionAuth.Client.Models {
    public class Tenant : IParsable {
        /// <summary>The accessControlConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public TenantAccessControlConfiguration? AccessControlConfiguration { get; set; }
#nullable restore
#else
        public TenantAccessControlConfiguration AccessControlConfiguration { get; set; }
#endif
        /// <summary>The captchaConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public TenantCaptchaConfiguration? CaptchaConfiguration { get; set; }
#nullable restore
#else
        public TenantCaptchaConfiguration CaptchaConfiguration { get; set; }
#endif
        /// <summary>The configured property</summary>
        public bool? Configured { get; set; }
        /// <summary>The connectorPolicies property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<ConnectorPolicy>? ConnectorPolicies { get; set; }
#nullable restore
#else
        public List<ConnectorPolicy> ConnectorPolicies { get; set; }
#endif
        /// <summary>The data property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Tenant_data? Data { get; set; }
#nullable restore
#else
        public Tenant_data Data { get; set; }
#endif
        /// <summary>The emailConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.EmailConfiguration? EmailConfiguration { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.EmailConfiguration EmailConfiguration { get; set; }
#endif
        /// <summary>The eventConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.EventConfiguration? EventConfiguration { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.EventConfiguration EventConfiguration { get; set; }
#endif
        /// <summary>The externalIdentifierConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.ExternalIdentifierConfiguration? ExternalIdentifierConfiguration { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.ExternalIdentifierConfiguration ExternalIdentifierConfiguration { get; set; }
#endif
        /// <summary>Configuration for the behavior of failed login attempts. This helps us protect against brute force password attacks.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.FailedAuthenticationConfiguration? FailedAuthenticationConfiguration { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.FailedAuthenticationConfiguration FailedAuthenticationConfiguration { get; set; }
#endif
        /// <summary>The familyConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.FamilyConfiguration? FamilyConfiguration { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.FamilyConfiguration FamilyConfiguration { get; set; }
#endif
        /// <summary>The formConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public TenantFormConfiguration? FormConfiguration { get; set; }
#nullable restore
#else
        public TenantFormConfiguration FormConfiguration { get; set; }
#endif
        /// <summary>The httpSessionMaxInactiveInterval property</summary>
        public int? HttpSessionMaxInactiveInterval { get; set; }
        /// <summary>The id property</summary>
        public Guid? Id { get; set; }
        /// <summary>The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC.</summary>
        public long? InsertInstant { get; set; }
        /// <summary>The issuer property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Issuer { get; set; }
#nullable restore
#else
        public string Issuer { get; set; }
#endif
        /// <summary>JWT Configuration. A JWT Configuration for an Application may not be active if it is using the global configuration, the configuration  may be &lt;code&gt;enabled = false&lt;code&gt;.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.JWTConfiguration? JwtConfiguration { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.JWTConfiguration JwtConfiguration { get; set; }
#endif
        /// <summary>The lambdaConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public TenantLambdaConfiguration? LambdaConfiguration { get; set; }
#nullable restore
#else
        public TenantLambdaConfiguration LambdaConfiguration { get; set; }
#endif
        /// <summary>The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC.</summary>
        public long? LastUpdateInstant { get; set; }
        /// <summary>The loginConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public TenantLoginConfiguration? LoginConfiguration { get; set; }
#nullable restore
#else
        public TenantLoginConfiguration LoginConfiguration { get; set; }
#endif
        /// <summary>The logoutURL property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LogoutURL { get; set; }
#nullable restore
#else
        public string LogoutURL { get; set; }
#endif
        /// <summary>The maximumPasswordAge property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.MaximumPasswordAge? MaximumPasswordAge { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.MaximumPasswordAge MaximumPasswordAge { get; set; }
#endif
        /// <summary>The minimumPasswordAge property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.MinimumPasswordAge? MinimumPasswordAge { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.MinimumPasswordAge MinimumPasswordAge { get; set; }
#endif
        /// <summary>The multiFactorConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public TenantMultiFactorConfiguration? MultiFactorConfiguration { get; set; }
#nullable restore
#else
        public TenantMultiFactorConfiguration MultiFactorConfiguration { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The oauthConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public TenantOAuth2Configuration? OauthConfiguration { get; set; }
#nullable restore
#else
        public TenantOAuth2Configuration OauthConfiguration { get; set; }
#endif
        /// <summary>Password Encryption Scheme Configuration</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.PasswordEncryptionConfiguration? PasswordEncryptionConfiguration { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.PasswordEncryptionConfiguration PasswordEncryptionConfiguration { get; set; }
#endif
        /// <summary>The passwordValidationRules property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.PasswordValidationRules? PasswordValidationRules { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.PasswordValidationRules PasswordValidationRules { get; set; }
#endif
        /// <summary>The rateLimitConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public TenantRateLimitConfiguration? RateLimitConfiguration { get; set; }
#nullable restore
#else
        public TenantRateLimitConfiguration RateLimitConfiguration { get; set; }
#endif
        /// <summary>The registrationConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public TenantRegistrationConfiguration? RegistrationConfiguration { get; set; }
#nullable restore
#else
        public TenantRegistrationConfiguration RegistrationConfiguration { get; set; }
#endif
        /// <summary>The scimServerConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public TenantSCIMServerConfiguration? ScimServerConfiguration { get; set; }
#nullable restore
#else
        public TenantSCIMServerConfiguration ScimServerConfiguration { get; set; }
#endif
        /// <summary>The ssoConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public TenantSSOConfiguration? SsoConfiguration { get; set; }
#nullable restore
#else
        public TenantSSOConfiguration SsoConfiguration { get; set; }
#endif
        /// <summary>The state property</summary>
        public ObjectState? State { get; set; }
        /// <summary>The themeId property</summary>
        public Guid? ThemeId { get; set; }
        /// <summary>A Tenant-level policy for deleting Users.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public TenantUserDeletePolicy? UserDeletePolicy { get; set; }
#nullable restore
#else
        public TenantUserDeletePolicy UserDeletePolicy { get; set; }
#endif
        /// <summary>The usernameConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public TenantUsernameConfiguration? UsernameConfiguration { get; set; }
#nullable restore
#else
        public TenantUsernameConfiguration UsernameConfiguration { get; set; }
#endif
        /// <summary>Tenant-level configuration for WebAuthn</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public TenantWebAuthnConfiguration? WebAuthnConfiguration { get; set; }
#nullable restore
#else
        public TenantWebAuthnConfiguration WebAuthnConfiguration { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Tenant CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Tenant();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"accessControlConfiguration", n => { AccessControlConfiguration = n.GetObjectValue<TenantAccessControlConfiguration>(TenantAccessControlConfiguration.CreateFromDiscriminatorValue); } },
                {"captchaConfiguration", n => { CaptchaConfiguration = n.GetObjectValue<TenantCaptchaConfiguration>(TenantCaptchaConfiguration.CreateFromDiscriminatorValue); } },
                {"configured", n => { Configured = n.GetBoolValue(); } },
                {"connectorPolicies", n => { ConnectorPolicies = n.GetCollectionOfObjectValues<ConnectorPolicy>(ConnectorPolicy.CreateFromDiscriminatorValue)?.ToList(); } },
                {"data", n => { Data = n.GetObjectValue<Tenant_data>(Tenant_data.CreateFromDiscriminatorValue); } },
                {"emailConfiguration", n => { EmailConfiguration = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.EmailConfiguration>(Askaiser.FusionAuth.Client.Models.EmailConfiguration.CreateFromDiscriminatorValue); } },
                {"eventConfiguration", n => { EventConfiguration = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.EventConfiguration>(Askaiser.FusionAuth.Client.Models.EventConfiguration.CreateFromDiscriminatorValue); } },
                {"externalIdentifierConfiguration", n => { ExternalIdentifierConfiguration = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.ExternalIdentifierConfiguration>(Askaiser.FusionAuth.Client.Models.ExternalIdentifierConfiguration.CreateFromDiscriminatorValue); } },
                {"failedAuthenticationConfiguration", n => { FailedAuthenticationConfiguration = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.FailedAuthenticationConfiguration>(Askaiser.FusionAuth.Client.Models.FailedAuthenticationConfiguration.CreateFromDiscriminatorValue); } },
                {"familyConfiguration", n => { FamilyConfiguration = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.FamilyConfiguration>(Askaiser.FusionAuth.Client.Models.FamilyConfiguration.CreateFromDiscriminatorValue); } },
                {"formConfiguration", n => { FormConfiguration = n.GetObjectValue<TenantFormConfiguration>(TenantFormConfiguration.CreateFromDiscriminatorValue); } },
                {"httpSessionMaxInactiveInterval", n => { HttpSessionMaxInactiveInterval = n.GetIntValue(); } },
                {"id", n => { Id = n.GetGuidValue(); } },
                {"insertInstant", n => { InsertInstant = n.GetLongValue(); } },
                {"issuer", n => { Issuer = n.GetStringValue(); } },
                {"jwtConfiguration", n => { JwtConfiguration = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.JWTConfiguration>(Askaiser.FusionAuth.Client.Models.JWTConfiguration.CreateFromDiscriminatorValue); } },
                {"lambdaConfiguration", n => { LambdaConfiguration = n.GetObjectValue<TenantLambdaConfiguration>(TenantLambdaConfiguration.CreateFromDiscriminatorValue); } },
                {"lastUpdateInstant", n => { LastUpdateInstant = n.GetLongValue(); } },
                {"loginConfiguration", n => { LoginConfiguration = n.GetObjectValue<TenantLoginConfiguration>(TenantLoginConfiguration.CreateFromDiscriminatorValue); } },
                {"logoutURL", n => { LogoutURL = n.GetStringValue(); } },
                {"maximumPasswordAge", n => { MaximumPasswordAge = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.MaximumPasswordAge>(Askaiser.FusionAuth.Client.Models.MaximumPasswordAge.CreateFromDiscriminatorValue); } },
                {"minimumPasswordAge", n => { MinimumPasswordAge = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.MinimumPasswordAge>(Askaiser.FusionAuth.Client.Models.MinimumPasswordAge.CreateFromDiscriminatorValue); } },
                {"multiFactorConfiguration", n => { MultiFactorConfiguration = n.GetObjectValue<TenantMultiFactorConfiguration>(TenantMultiFactorConfiguration.CreateFromDiscriminatorValue); } },
                {"name", n => { Name = n.GetStringValue(); } },
                {"oauthConfiguration", n => { OauthConfiguration = n.GetObjectValue<TenantOAuth2Configuration>(TenantOAuth2Configuration.CreateFromDiscriminatorValue); } },
                {"passwordEncryptionConfiguration", n => { PasswordEncryptionConfiguration = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.PasswordEncryptionConfiguration>(Askaiser.FusionAuth.Client.Models.PasswordEncryptionConfiguration.CreateFromDiscriminatorValue); } },
                {"passwordValidationRules", n => { PasswordValidationRules = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.PasswordValidationRules>(Askaiser.FusionAuth.Client.Models.PasswordValidationRules.CreateFromDiscriminatorValue); } },
                {"rateLimitConfiguration", n => { RateLimitConfiguration = n.GetObjectValue<TenantRateLimitConfiguration>(TenantRateLimitConfiguration.CreateFromDiscriminatorValue); } },
                {"registrationConfiguration", n => { RegistrationConfiguration = n.GetObjectValue<TenantRegistrationConfiguration>(TenantRegistrationConfiguration.CreateFromDiscriminatorValue); } },
                {"scimServerConfiguration", n => { ScimServerConfiguration = n.GetObjectValue<TenantSCIMServerConfiguration>(TenantSCIMServerConfiguration.CreateFromDiscriminatorValue); } },
                {"ssoConfiguration", n => { SsoConfiguration = n.GetObjectValue<TenantSSOConfiguration>(TenantSSOConfiguration.CreateFromDiscriminatorValue); } },
                {"state", n => { State = n.GetEnumValue<ObjectState>(); } },
                {"themeId", n => { ThemeId = n.GetGuidValue(); } },
                {"userDeletePolicy", n => { UserDeletePolicy = n.GetObjectValue<TenantUserDeletePolicy>(TenantUserDeletePolicy.CreateFromDiscriminatorValue); } },
                {"usernameConfiguration", n => { UsernameConfiguration = n.GetObjectValue<TenantUsernameConfiguration>(TenantUsernameConfiguration.CreateFromDiscriminatorValue); } },
                {"webAuthnConfiguration", n => { WebAuthnConfiguration = n.GetObjectValue<TenantWebAuthnConfiguration>(TenantWebAuthnConfiguration.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<TenantAccessControlConfiguration>("accessControlConfiguration", AccessControlConfiguration);
            writer.WriteObjectValue<TenantCaptchaConfiguration>("captchaConfiguration", CaptchaConfiguration);
            writer.WriteBoolValue("configured", Configured);
            writer.WriteCollectionOfObjectValues<ConnectorPolicy>("connectorPolicies", ConnectorPolicies);
            writer.WriteObjectValue<Tenant_data>("data", Data);
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.EmailConfiguration>("emailConfiguration", EmailConfiguration);
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.EventConfiguration>("eventConfiguration", EventConfiguration);
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.ExternalIdentifierConfiguration>("externalIdentifierConfiguration", ExternalIdentifierConfiguration);
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.FailedAuthenticationConfiguration>("failedAuthenticationConfiguration", FailedAuthenticationConfiguration);
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.FamilyConfiguration>("familyConfiguration", FamilyConfiguration);
            writer.WriteObjectValue<TenantFormConfiguration>("formConfiguration", FormConfiguration);
            writer.WriteIntValue("httpSessionMaxInactiveInterval", HttpSessionMaxInactiveInterval);
            writer.WriteGuidValue("id", Id);
            writer.WriteLongValue("insertInstant", InsertInstant);
            writer.WriteStringValue("issuer", Issuer);
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.JWTConfiguration>("jwtConfiguration", JwtConfiguration);
            writer.WriteObjectValue<TenantLambdaConfiguration>("lambdaConfiguration", LambdaConfiguration);
            writer.WriteLongValue("lastUpdateInstant", LastUpdateInstant);
            writer.WriteObjectValue<TenantLoginConfiguration>("loginConfiguration", LoginConfiguration);
            writer.WriteStringValue("logoutURL", LogoutURL);
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.MaximumPasswordAge>("maximumPasswordAge", MaximumPasswordAge);
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.MinimumPasswordAge>("minimumPasswordAge", MinimumPasswordAge);
            writer.WriteObjectValue<TenantMultiFactorConfiguration>("multiFactorConfiguration", MultiFactorConfiguration);
            writer.WriteStringValue("name", Name);
            writer.WriteObjectValue<TenantOAuth2Configuration>("oauthConfiguration", OauthConfiguration);
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.PasswordEncryptionConfiguration>("passwordEncryptionConfiguration", PasswordEncryptionConfiguration);
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.PasswordValidationRules>("passwordValidationRules", PasswordValidationRules);
            writer.WriteObjectValue<TenantRateLimitConfiguration>("rateLimitConfiguration", RateLimitConfiguration);
            writer.WriteObjectValue<TenantRegistrationConfiguration>("registrationConfiguration", RegistrationConfiguration);
            writer.WriteObjectValue<TenantSCIMServerConfiguration>("scimServerConfiguration", ScimServerConfiguration);
            writer.WriteObjectValue<TenantSSOConfiguration>("ssoConfiguration", SsoConfiguration);
            writer.WriteEnumValue<ObjectState>("state", State);
            writer.WriteGuidValue("themeId", ThemeId);
            writer.WriteObjectValue<TenantUserDeletePolicy>("userDeletePolicy", UserDeletePolicy);
            writer.WriteObjectValue<TenantUsernameConfiguration>("usernameConfiguration", UsernameConfiguration);
            writer.WriteObjectValue<TenantWebAuthnConfiguration>("webAuthnConfiguration", WebAuthnConfiguration);
        }
    }
}
