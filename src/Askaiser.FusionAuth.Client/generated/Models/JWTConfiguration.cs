// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Askaiser.FusionAuth.Client.Models {
    /// <summary>
    /// JWT Configuration. A JWT Configuration for an Application may not be active if it is using the global configuration, the configuration  may be &lt;code&gt;enabled = false&lt;code&gt;.
    /// </summary>
    public class JWTConfiguration : IParsable {
        /// <summary>The accessTokenKeyId property</summary>
        public Guid? AccessTokenKeyId { get; set; }
        /// <summary>The enabled property</summary>
        public bool? Enabled { get; set; }
        /// <summary>The idTokenKeyId property</summary>
        public Guid? IdTokenKeyId { get; set; }
        /// <summary>The refreshTokenExpirationPolicy property</summary>
        public Askaiser.FusionAuth.Client.Models.RefreshTokenExpirationPolicy? RefreshTokenExpirationPolicy { get; set; }
        /// <summary>The refreshTokenRevocationPolicy property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.RefreshTokenRevocationPolicy? RefreshTokenRevocationPolicy { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.RefreshTokenRevocationPolicy RefreshTokenRevocationPolicy { get; set; }
#endif
        /// <summary>The refreshTokenSlidingWindowConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.RefreshTokenSlidingWindowConfiguration? RefreshTokenSlidingWindowConfiguration { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.RefreshTokenSlidingWindowConfiguration RefreshTokenSlidingWindowConfiguration { get; set; }
#endif
        /// <summary>The refreshTokenTimeToLiveInMinutes property</summary>
        public int? RefreshTokenTimeToLiveInMinutes { get; set; }
        /// <summary>The refreshTokenUsagePolicy property</summary>
        public Askaiser.FusionAuth.Client.Models.RefreshTokenUsagePolicy? RefreshTokenUsagePolicy { get; set; }
        /// <summary>The timeToLiveInSeconds property</summary>
        public int? TimeToLiveInSeconds { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static JWTConfiguration CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new JWTConfiguration();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"accessTokenKeyId", n => { AccessTokenKeyId = n.GetGuidValue(); } },
                {"enabled", n => { Enabled = n.GetBoolValue(); } },
                {"idTokenKeyId", n => { IdTokenKeyId = n.GetGuidValue(); } },
                {"refreshTokenExpirationPolicy", n => { RefreshTokenExpirationPolicy = n.GetEnumValue<RefreshTokenExpirationPolicy>(); } },
                {"refreshTokenRevocationPolicy", n => { RefreshTokenRevocationPolicy = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.RefreshTokenRevocationPolicy>(Askaiser.FusionAuth.Client.Models.RefreshTokenRevocationPolicy.CreateFromDiscriminatorValue); } },
                {"refreshTokenSlidingWindowConfiguration", n => { RefreshTokenSlidingWindowConfiguration = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.RefreshTokenSlidingWindowConfiguration>(Askaiser.FusionAuth.Client.Models.RefreshTokenSlidingWindowConfiguration.CreateFromDiscriminatorValue); } },
                {"refreshTokenTimeToLiveInMinutes", n => { RefreshTokenTimeToLiveInMinutes = n.GetIntValue(); } },
                {"refreshTokenUsagePolicy", n => { RefreshTokenUsagePolicy = n.GetEnumValue<RefreshTokenUsagePolicy>(); } },
                {"timeToLiveInSeconds", n => { TimeToLiveInSeconds = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteGuidValue("accessTokenKeyId", AccessTokenKeyId);
            writer.WriteBoolValue("enabled", Enabled);
            writer.WriteGuidValue("idTokenKeyId", IdTokenKeyId);
            writer.WriteEnumValue<RefreshTokenExpirationPolicy>("refreshTokenExpirationPolicy", RefreshTokenExpirationPolicy);
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.RefreshTokenRevocationPolicy>("refreshTokenRevocationPolicy", RefreshTokenRevocationPolicy);
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.RefreshTokenSlidingWindowConfiguration>("refreshTokenSlidingWindowConfiguration", RefreshTokenSlidingWindowConfiguration);
            writer.WriteIntValue("refreshTokenTimeToLiveInMinutes", RefreshTokenTimeToLiveInMinutes);
            writer.WriteEnumValue<RefreshTokenUsagePolicy>("refreshTokenUsagePolicy", RefreshTokenUsagePolicy);
            writer.WriteIntValue("timeToLiveInSeconds", TimeToLiveInSeconds);
        }
    }
}
