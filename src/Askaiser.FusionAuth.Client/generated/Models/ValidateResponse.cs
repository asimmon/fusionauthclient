// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Askaiser.FusionAuth.Client.Models {
    public class ValidateResponse : IParsable {
        /// <summary>JSON Web Token (JWT) as defined by RFC 7519.  &lt;pre&gt;  From RFC 7519 Section 1. Introduction:     The suggested pronunciation of JWT is the same as the English word &quot;jot&quot;.  &lt;pre&gt;  The JWT is not Thread-Safe and should not be re-used.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.JWT? Jwt { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.JWT Jwt { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static ValidateResponse CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new ValidateResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"jwt", n => { Jwt = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.JWT>(Askaiser.FusionAuth.Client.Models.JWT.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.JWT>("jwt", Jwt);
        }
    }
}
