// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Askaiser.FusionAuth.Client.Models {
    /// <summary>
    /// Registration API request object.
    /// </summary>
    public class RegistrationResponse : IParsable {
        /// <summary>The refreshToken property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RefreshToken { get; set; }
#nullable restore
#else
        public string RefreshToken { get; set; }
#endif
        /// <summary>User registration information for a single application.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UserRegistration? Registration { get; set; }
#nullable restore
#else
        public UserRegistration Registration { get; set; }
#endif
        /// <summary>The registrationVerificationId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RegistrationVerificationId { get; set; }
#nullable restore
#else
        public string RegistrationVerificationId { get; set; }
#endif
        /// <summary>The token property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Token { get; set; }
#nullable restore
#else
        public string Token { get; set; }
#endif
        /// <summary>The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC.</summary>
        public long? TokenExpirationInstant { get; set; }
        /// <summary>The global view of a User. This object contains all global information about the user including birth date, registration information  preferred languages, global attributes, etc.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.User? User { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.User User { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static RegistrationResponse CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new RegistrationResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"refreshToken", n => { RefreshToken = n.GetStringValue(); } },
                {"registration", n => { Registration = n.GetObjectValue<UserRegistration>(UserRegistration.CreateFromDiscriminatorValue); } },
                {"registrationVerificationId", n => { RegistrationVerificationId = n.GetStringValue(); } },
                {"token", n => { Token = n.GetStringValue(); } },
                {"tokenExpirationInstant", n => { TokenExpirationInstant = n.GetLongValue(); } },
                {"user", n => { User = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.User>(Askaiser.FusionAuth.Client.Models.User.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("refreshToken", RefreshToken);
            writer.WriteObjectValue<UserRegistration>("registration", Registration);
            writer.WriteStringValue("registrationVerificationId", RegistrationVerificationId);
            writer.WriteStringValue("token", Token);
            writer.WriteLongValue("tokenExpirationInstant", TokenExpirationInstant);
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.User>("user", User);
        }
    }
}
