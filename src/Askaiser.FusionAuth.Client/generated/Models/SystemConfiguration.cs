// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Askaiser.FusionAuth.Client.Models {
    public class SystemConfiguration : IParsable {
        /// <summary>The auditLogConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.AuditLogConfiguration? AuditLogConfiguration { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.AuditLogConfiguration AuditLogConfiguration { get; set; }
#endif
        /// <summary>The corsConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.CORSConfiguration? CorsConfiguration { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.CORSConfiguration CorsConfiguration { get; set; }
#endif
        /// <summary>The data property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public SystemConfiguration_data? Data { get; set; }
#nullable restore
#else
        public SystemConfiguration_data Data { get; set; }
#endif
        /// <summary>The eventLogConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.EventLogConfiguration? EventLogConfiguration { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.EventLogConfiguration EventLogConfiguration { get; set; }
#endif
        /// <summary>The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC.</summary>
        public long? InsertInstant { get; set; }
        /// <summary>The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC.</summary>
        public long? LastUpdateInstant { get; set; }
        /// <summary>The loginRecordConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.LoginRecordConfiguration? LoginRecordConfiguration { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.LoginRecordConfiguration LoginRecordConfiguration { get; set; }
#endif
        /// <summary>Timezone Identifier</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReportTimezone { get; set; }
#nullable restore
#else
        public string ReportTimezone { get; set; }
#endif
        /// <summary>The uiConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.UIConfiguration? UiConfiguration { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.UIConfiguration UiConfiguration { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static SystemConfiguration CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new SystemConfiguration();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"auditLogConfiguration", n => { AuditLogConfiguration = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.AuditLogConfiguration>(Askaiser.FusionAuth.Client.Models.AuditLogConfiguration.CreateFromDiscriminatorValue); } },
                {"corsConfiguration", n => { CorsConfiguration = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.CORSConfiguration>(Askaiser.FusionAuth.Client.Models.CORSConfiguration.CreateFromDiscriminatorValue); } },
                {"data", n => { Data = n.GetObjectValue<SystemConfiguration_data>(SystemConfiguration_data.CreateFromDiscriminatorValue); } },
                {"eventLogConfiguration", n => { EventLogConfiguration = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.EventLogConfiguration>(Askaiser.FusionAuth.Client.Models.EventLogConfiguration.CreateFromDiscriminatorValue); } },
                {"insertInstant", n => { InsertInstant = n.GetLongValue(); } },
                {"lastUpdateInstant", n => { LastUpdateInstant = n.GetLongValue(); } },
                {"loginRecordConfiguration", n => { LoginRecordConfiguration = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.LoginRecordConfiguration>(Askaiser.FusionAuth.Client.Models.LoginRecordConfiguration.CreateFromDiscriminatorValue); } },
                {"reportTimezone", n => { ReportTimezone = n.GetStringValue(); } },
                {"uiConfiguration", n => { UiConfiguration = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.UIConfiguration>(Askaiser.FusionAuth.Client.Models.UIConfiguration.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.AuditLogConfiguration>("auditLogConfiguration", AuditLogConfiguration);
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.CORSConfiguration>("corsConfiguration", CorsConfiguration);
            writer.WriteObjectValue<SystemConfiguration_data>("data", Data);
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.EventLogConfiguration>("eventLogConfiguration", EventLogConfiguration);
            writer.WriteLongValue("insertInstant", InsertInstant);
            writer.WriteLongValue("lastUpdateInstant", LastUpdateInstant);
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.LoginRecordConfiguration>("loginRecordConfiguration", LoginRecordConfiguration);
            writer.WriteStringValue("reportTimezone", ReportTimezone);
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.UIConfiguration>("uiConfiguration", UiConfiguration);
        }
    }
}
