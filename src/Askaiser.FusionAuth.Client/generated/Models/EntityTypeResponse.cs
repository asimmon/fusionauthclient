// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Askaiser.FusionAuth.Client.Models {
    /// <summary>
    /// Entity Type API response object.
    /// </summary>
    public class EntityTypeResponse : IParsable {
        /// <summary>Models an entity type that has a specific set of permissions. These are global objects and can be used across tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Askaiser.FusionAuth.Client.Models.EntityType? EntityType { get; set; }
#nullable restore
#else
        public Askaiser.FusionAuth.Client.Models.EntityType EntityType { get; set; }
#endif
        /// <summary>The entityTypes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Askaiser.FusionAuth.Client.Models.EntityType>? EntityTypes { get; set; }
#nullable restore
#else
        public List<Askaiser.FusionAuth.Client.Models.EntityType> EntityTypes { get; set; }
#endif
        /// <summary>Models a specific entity type permission. This permission can be granted to users or other entities.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public EntityTypePermission? Permission { get; set; }
#nullable restore
#else
        public EntityTypePermission Permission { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static EntityTypeResponse CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new EntityTypeResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"entityType", n => { EntityType = n.GetObjectValue<Askaiser.FusionAuth.Client.Models.EntityType>(Askaiser.FusionAuth.Client.Models.EntityType.CreateFromDiscriminatorValue); } },
                {"entityTypes", n => { EntityTypes = n.GetCollectionOfObjectValues<Askaiser.FusionAuth.Client.Models.EntityType>(Askaiser.FusionAuth.Client.Models.EntityType.CreateFromDiscriminatorValue)?.ToList(); } },
                {"permission", n => { Permission = n.GetObjectValue<EntityTypePermission>(EntityTypePermission.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<Askaiser.FusionAuth.Client.Models.EntityType>("entityType", EntityType);
            writer.WriteCollectionOfObjectValues<Askaiser.FusionAuth.Client.Models.EntityType>("entityTypes", EntityTypes);
            writer.WriteObjectValue<EntityTypePermission>("permission", Permission);
        }
    }
}
